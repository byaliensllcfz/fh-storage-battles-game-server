apiVersion: "agones.dev/v1"
kind: Fleet
metadata:
  namespace: <NAME>-<ENV>
  labels:
    app: <NAME>-<URL_VERSION>
    tags.datadoghq.com/env: <ENV>
    tags.datadoghq.com/service: <NAME>
    tags.datadoghq.com/version: <VERSION>
    app.kubernetes.io/name: <NAME>
    app.kubernetes.io/version: <VERSION>
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: gocd
    forhumans/build: "<SHORT_SHA>"
    forhumans/in-use: "true"
  name: <NAME>-fleet-<URL_VERSION>
spec:
  replicas: 1
  template:
    metadata:
      labels:
        ssg.bundleid: com.byaliens.bid.wars.stars.multiplayer.auction.battles
        version: <VERSION>
        condition: "DEFAULT"
        tags.datadoghq.com/env: <ENV>
        tags.datadoghq.com/service: <NAME>
        tags.datadoghq.com/version: <VERSION>
        app.kubernetes.io/name: <NAME>
        app.kubernetes.io/version: <VERSION>
        app.kubernetes.io/component: server
        app.kubernetes.io/managed-by: gocd
        forhumans/build: "<SHORT_SHA>"
        forhumans/in-use: "true"
    spec:
      ports:
      - name: default
        containerPort: 2567
        protocol: TCP
      health:
        disabled: false
        initialDelaySeconds: 30
        periodSeconds: 30
        failureThreshold: 3
      template:
        metadata:
          annotations:
            ad.datadoghq.com/<NAME>-<URL_VERSION>.logs: '[{"source": "nodejs"}]'
          labels:
            tags.datadoghq.com/env: <ENV>
            tags.datadoghq.com/service: <NAME>
            tags.datadoghq.com/version: <VERSION>
            admission.datadoghq.com/enabled: "true"
        spec:
          containers:
          - name: <NAME>-<URL_VERSION>
            image: gcr.io/forhumans-gameservices-dev/<NAME>@<SHA>
            imagePullPolicy: IfNotPresent
            env:
              - name: DD_RUNTIME_METRICS_ENABLED
                value: "true"
              - name: DD_LOGS_INJECTION
                value: "true"
              - name: DD_TRACE_ENABLED
                value: "true"
            livenessProbe:
              failureThreshold: 5
              httpGet:
                path: /liveness-check
                port: 2567
                scheme: HTTP
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              requests:
                cpu: "0.5"
                memory: 1Gi
            volumeMounts:
            - mountPath: /var/secrets/google
              name: google-cloud-key
            - mountPath: /app/configuration
              name: config-files
          volumes:
          - name: google-cloud-key
            secret:
              defaultMode: 420
              secretName: gcp-api-key
          - configMap:
              defaultMode: 420
              name: <NAME>-config-<URL_VERSION>
            name: config-files
