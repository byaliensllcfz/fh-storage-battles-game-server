apiVersion: "agones.dev/v1"
kind: Fleet
metadata:
  namespace: default
  labels:
    app: <NAME>-<URL_VERSION>
    tags.datadoghq.com/env: <ENV>
    tags.datadoghq.com/service: <NAME>
    tags.datadoghq.com/version: <BUILD_VERSION>
  name: <NAME>-fleet-<URL_VERSION>
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        ad.datadoghq.com/<NAME>-<URL_VERSION>.logs: '[{"source":"nodejs"}]'
      labels:
        ssg.bundleid: com.byaliens.bid.wars.stars.multiplayer.auction.battles
        version: <VERSION>
        condition: "DEFAULT"
        tags.datadoghq.com/env: <ENV>
        tags.datadoghq.com/service: <NAME>
        tags.datadoghq.com/version: <BUILD_VERSION>
    spec:
      env:
        - name: DD_ENV
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_RUNTIME_METRICS_ENABLED
          value: "true"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_ENABLED
          value: "true"
      ports:
      - name: default
        containerPort: 2567
        protocol: TCP
      health:
        disabled: false
        initialDelaySeconds: 30
        periodSeconds: 30
        failureThreshold: 3
      template:
        spec:
          containers:
          - image: gcr.io/forhumans-gameservices-dev/<NAME>:<BUILD_VERSION>
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 5
              httpGet:
                path: /liveness-check
                port: 2567
                scheme: HTTP
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            name: <NAME>-<URL_VERSION>
            resources:
              requests:
                cpu: "0.5"
                memory: 1Gi
            volumeMounts:
            - mountPath: /var/secrets/google
              name: google-cloud-key
            - mountPath: /app/configuration
              name: config-files
          volumes:
          - name: google-cloud-key
            secret:
              defaultMode: 420
              secretName: gcp-api-key
          - configMap:
              defaultMode: 420
              name: config-<NAME>-<URL_VERSION>
            name: config-files
